---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatDate } from '../../utils/date';
import RelatedPosts from '../../components/RelatedPosts.astro';
import Button from '../../components/ui/Button.astro';
import Tag from '../../components/ui/Tag.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post, posts },
  }));
}

const { post, posts } = Astro.props;
const { Content, headings } = await post.render();

const allPosts = await getCollection('blog');
const similarPosts = allPosts
  .filter(p => p.data.category === post.data.category && p.slug !== post.slug)
  .slice(0, 3);
---

<Layout title={`${post.data.title} - PêcheBlog`}>
  <main>
    <!-- En-tête de l'article -->
    <header class="relative py-16 bg-gradient-to-b from-gray-900 to-gray-800">
      <div class="max-w-4xl mx-auto px-6">
        <div class="text-center">
          <div class="mb-6">
            <Tag
              href={`/blog/category/${post.data.category}`}
              text={post.data.category.charAt(0).toUpperCase() + post.data.category.slice(1)}
              isCategory={true}
            />
          </div>
          <h1 class="text-4xl md:text-5xl font-bold text-white mb-6 leading-tight">{post.data.title}</h1>
          <p class="text-xl text-gray-300 mb-8 leading-relaxed max-w-2xl mx-auto">{post.data.description}</p>
          <div class="flex items-center justify-center space-x-6 text-gray-400">
            <time datetime={post.data.pubDate.toISOString()} class="flex items-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              Le {formatDate(post.data.pubDate)}
            </time>
          </div>
        </div>
      </div>
    </header>

    <!-- Image principale -->
    <div class="max-w-5xl mx-auto -mt-10 px-6">
      {post.data.image && (
        <div class="aspect-[16/9] rounded-xl overflow-hidden shadow-2xl">
          <img
            src={post.data.image.replace('.webp', '-lg.webp')}
            alt={post.data.title}
            class="w-full h-full object-cover"
          />
        </div>
      )}
    </div>

    <!-- Contenu principal -->
    <div class="max-w-7xl mx-auto px-6 py-16">
      <div class="grid grid-cols-1 lg:grid-cols-[240px_1fr_300px] gap-12">
        <!-- Sommaire (gauche) -->
        <aside class="hidden lg:block">
          <div class="sticky top-8">
            <nav class="space-y-1 font-medium">
              <p class="text-sm uppercase tracking-wider text-gray-500 mb-4">Sommaire</p>
              {headings.map((heading) => (
                <a href={`#${heading.slug}`}
                   class:list={[
                     "block py-1 hover:text-blue-600 transition-colors",
                     {
                       "pl-4 text-sm text-gray-600": heading.depth === 3,
                       "text-gray-900": heading.depth === 2
                     }
                   ]}>
                  {heading.text}
                </a>
              ))}
            </nav>
          </div>
        </aside>

        <!-- Article -->
        <article class="min-w-0">
          <div class="prose prose-lg max-w-none">
            <Content />
          </div>

          <!-- Tags -->
          {post.data.tags && (
            <div class="mt-12 pt-6 border-t">
              <h3 class="text-sm uppercase tracking-wider text-gray-500 mb-4">Tags</h3>
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map(tag => (
                  <Tag
                    href={`/blog/tag/${tag}`}
                    text={tag}
                  />
                ))}
              </div>
            </div>
          )}
        </article>

        <!-- Sidebar (droite) -->
        <aside class="hidden lg:block">
          <div class="sticky top-8 space-y-8">
            <!-- Ajouter ici d'autres éléments de sidebar si nécessaire -->
          </div>
        </aside>
      </div>
    </div>

    <!-- Articles similaires -->
    <div class="mt-16">
      <RelatedPosts currentPost={post} posts={posts} maxPosts={3} />
    </div>
  </main>
</Layout>

<style is:global>
  /* Style du contenu de l'article */
  .prose {
    --tw-prose-body: theme('colors.gray.700');
    --tw-prose-headings: theme('colors.gray.900');
    --tw-prose-links: theme('colors.blue.600');
    --tw-prose-links-hover: theme('colors.blue.700');
    --tw-prose-underline: theme('colors.blue.500 / 0.2');
    --tw-prose-underline-hover: theme('colors.blue.500');
    --tw-prose-bold: theme('colors.gray.900');
    --tw-prose-counters: theme('colors.gray.500');
    --tw-prose-bullets: theme('colors.gray.300');
    --tw-prose-hr: theme('colors.gray.200');
    --tw-prose-quote-borders: theme('colors.gray.200');
    --tw-prose-captions: theme('colors.gray.500');
    --tw-prose-code: theme('colors.gray.900');
    --tw-prose-code-bg: theme('colors.gray.100');
    --tw-prose-pre-code: theme('colors.gray.200');
    --tw-prose-pre-bg: theme('colors.gray.800');
    --tw-prose-pre-border: 'transparent';
    --tw-prose-th-borders: theme('colors.gray.300');
    --tw-prose-td-borders: theme('colors.gray.200');
  }

  .prose pre {
    background-color: var(--tw-prose-pre-bg);
    border-radius: theme('borderRadius.lg');
    padding: theme('spacing.6');
    overflow-x: auto;
  }

  .prose code {
    background-color: var(--tw-prose-code-bg);
    border-radius: theme('borderRadius.md');
    padding: theme('spacing.1') theme('spacing.1.5');
    font-size: 0.875em;
  }

  .prose img {
    border-radius: theme('borderRadius.lg');
    box-shadow: theme('boxShadow.md');
  }

  .prose a {
    text-decoration: none;
    border-bottom: 2px solid var(--tw-prose-underline);
    transition: all 0.2s ease;
  }

  .prose a:hover {
    border-color: var(--tw-prose-underline-hover);
  }
</style>
